#!/usr/bin/env ruby
# -*- coding: utf-8 -*-
require File.dirname(__FILE__)+'/../config/environment'
ActionMailer::Base.raise_delivery_errors = false
ActionMailer::Base.delivery_method = :test

# Arguments
user_id = ARGV[0]
project_id = ARGV[1]
repository_name = ARGV[2].dup

# Check the IDs.
user = User.find(user_id)
if !user
  puts "The user id #{user_id} is invalid."
  exit(1)
end

project = Project.find(project_id)
if !project
  puts "The project id #{project_id} is invalid."
  exit(1)
elsif project.user_id != user_id.to_i
  puts "The owner of the project #{project_id} (#{project.user_id}) is different from the user #{user_id}."
  exit(1)
end

# Check if there's a repository with the given name.
if Repository.find_by_name(repository_name)
  puts "There's already a repository named #{repository_name}."
  exit(1)
end

repository = Repository.new :name => repository_name, :project => project,
:owner_type => 'User', :owner => user, :user => user,
:ready => true, :kind => 0,
:description => 'Created by Lifthub'
if repository.save
  #puts "Project #{repository_name} created successfully."
else
  puts "Failed creating repository #{repository_name}."
  repository.errors.each_full { |msg| puts msg }
  exit(1)
end

#if !Repository.create_git_repository()
#  puts "Failed create_git_repository for #{repository_name}."
#  exit(1)
#end

# print the user ID so the caller can use it.
puts repository.id
